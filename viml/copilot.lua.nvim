Plug 'zbirenbaum/copilot.lua'

function! SetupCopilot()
lua << EOF
  require('copilot').setup({
    panel = { enabled = false },
    suggestion = {
      enabled = true,
      auto_trigger = true,
      debounce = 75,
      -- We want keybindings to be setup in our autocomplete library instead
      -- leverage require("copilot.suggestion").is_visible() to do that
      -- keymap = {
      --   accept = "<Tab>",
      --   accept_word = "<CR>",
      --   -- accept_line = "<space>",
      --   -- next = "<C-j>",
      --   -- prev = "<C-k>",
      --   dismiss = "<C-]>",
      -- },
      keymap = {
        accept = "<nowait>", -- Disable default accept mapping or set to something unused
        accept_word = "<C-Enter>",
        accept_line = "<nowait>",
        next = "<M-]>",
        prev = "<M-[>",
        dismiss = "<C-]>",
      },
    },
    filetypes = {
      ["*.pvt.*"] = false,
      yaml = false,
      help = false,
      gitcommit = false,
      gitrebase = false,
      hgcommit = false,
      svn = false,
      cvs = false,
      ["."] = false
    },
  })

EOF
endfunction
autocmd VimEnter * call SetupCopilot()

" The below function witll call the copilotToggle method after 200ms if the current filetype is 'copilot-chat'. This allows us to enable Copilot ghost-text completions withing the copilot-chat buffer.
" see also: 
" https://github.com/zbirenbaum/copilot.lua/issues/279
" https://github.com/CheesyChocolate/nvim/commit/dd20a290864379e8170815f42775d089775dc85f

augroup CopilotToggle
  autocmd!
  autocmd BufEnter * if &filetype ==# 'copilot-chat' && !exists('b:copilot_toggle_ran') |
    \ let b:copilot_toggle_ran = 1 |
    \ echom "CopilotToggle condition met" |
    \ call timer_start(200, { -> execute('echom "copilotToggle ran" | Copilot! toggle') }) |
    \ endif
augroup END
