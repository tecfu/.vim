version: 2
root-markers:
  - .git
tools:
  # general formatters
  prettierd: &prettierd
    format-command: >
      prettierd ${INPUT} ${--range-start=charStart} ${--range-end=charEnd} \
        ${--tab-width=tabSize}
    format-stdin: true
    lint-after-open: true
    root-markers:
      - .prettierrc
      - .prettierrc.json
      - .prettierrc.js
      - .prettierrc.yml
      - .prettierrc.yaml
      - .prettierrc.json5
      - .prettierrc.mjs
      - .prettierrc.cjs
      - .prettierrc.toml

  # python formatters
  black: &black
    format-command: "black --fast -"
    format-stdin: true
    lint-command: "black --check --diff -"
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-after-open: true

  # javascript and typescript formatters
  eslint_d: &eslint_d
    format-command: "eslint_d --fix-to-stdout --stdin --stdin-filename ${INPUT}"
    format-stdin: true
    lint-command: "eslint_d --f unix --stdin --stdin-filename=${INPUT}"
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-after-open: true

  eslint: &eslint
    format-command: "eslint --format unix --fix-to-stdout --stdin --stdin-filename=${INPUT}"
    format-stdin: true
    lint-command: "eslint --format unix --stdin --stdin-filename=${INPUT}"
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-after-open: true

  # go formatters
  gofmt: &gofmt
    format-command: "gofmt"
    format-stdin: true

  goimports: &goimports
    format-command: "goimports"
    format-stdin: true

  golangci_lint: &golangci_lint
    lint-command: "golangci-lint run --out-format=line-number"
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: %m"

  # sql formatters and linters
  sql_language_server: &sql_language_server
    command: sql-language-server
    args: ["up", "--method", "stdio"]
    filetypes: [sql]
    rootMarkers: [".git/", "package.json"]
    settings:
      sql:

  #sql-language-server-ksql:
  #  command: sql-language-server
  #  args: ["up", "--method", "stdio"]
  #  filetypes: [ksql]
  #  rootMarkers: [".git/", "package.json"]
  #  settings:
  #    sql:
  #      dialect: "kafka"

  sql_lint: &sql_lint
    lint-command: "sql-lint --format unix --stdin --stdin-filename=${INPUT}"
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-after-open: true

  # shell formatters
  shfmt: &shfmt
    format-command: "shfmt -ci -s -bn"
    format-stdin: true

languages:
  go:
    - <<: *golangci_lint
    - <<: *gofmt
    - <<: *goimports
  javascript:
    - <<: *eslint_d
  json:
    - <<: *prettierd
  jsonc:
    - <<: *prettierd
  #ksql:
    #- <<: *sql-language-server-ksql
    #- <<: *sql-lint
  python:
    - <<: *black
  sh:
    - <<: *shfmt
  sql:
    - <<: *sql_language_server
    - <<: *sql_lint
  typescript:
    - <<: *eslint_d
