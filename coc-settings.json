// For unknown reasons this file will always be noexpandtab in nvim
{
  "diagnostic.virtualTextCurrentLineOnly": false,
  "diagnostic.messageTarget": "echo",
  "diagnostic.virtualText": true,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.enable": true,
  "diagnostic.autoRefresh": true,
  "diagnostic.locationlistUpdate": true,
  "diagnostic.errorSign": "✖",
  "diagnostic.warningSign": "⚑",
  "diagnostic.infoSign": "⚑",
  "diagnostic.hintSign": "⚑",
  "languageserver": {
    "coc-terraform-ls": {
      "filetypes": ["terraform", "tf"],
      "command": "terraform-ls",
      "args": ["serve"],
      "initializationOptions": {},
      "settings": {},
      "sources": ["https://github.com/hashicorp/terraform-ls"]
    },
    "coc-vscode-json-language-server": {
      "filetypes": ["json", "jsonc"],
      "command": "vscode-json-language-server",
      "args": ["--stdio"],
      "settings": {
        "json": {
          "schemas": [],
          "format": {
            "enable": false
          },
          "validate": {
            "enable": true
          }
        }
      },
      "trace.server": "verbose",
      "initializationOptions": {
        "documentFormatting": false,
        "documentRangeFormatting": false
      },
      "sources": ["npm i -g vscode-langservers-extracted"],
      "rationale": "vscode-json-language-server for linting."
    },
    // coc chokes on diagnostics from this server, errors on workspace/didChangeWorkspaceFolders
    // "coc-vscode-eslint-language-server": {
    //   "filetypes": ["javascript", "typescript"],
    //   //"command": "nc",
    //   //"args": ["localhost", "12345"],
    //   "command": "vscode-eslint-language-server",
    //   "args": ["--stdio"],
    //   "trace.server": "verbose",
    //   "initializationOptions": {},
    //   "sources": ["npm i -g vscode-langservers-extracted"],
    //   "rationale": "uses vscode eslint, but not working"
    // },
    // "coc-manual-vscode-eslint-language-server": {
    //   "filetypes": ["javascript", "typescript"],
    //   "command": "nc",
    //   "args": ["localhost", "12346"],
    //   // "command": "node",
    //   // "args": ["/home/base/vscode-eslint/server/out/eslintServer.js", "--stdio"],
    //   "trace.server": "verbose",
    //   "initializationOptions": {
    //     "workspaceFolder": "/home/base/Documents/bitbucket/aws-lambda-ts-sls-cloudformation",
    //     "workingDirectory": "/home/base/Documents/bitbucket/aws-lambda-ts-sls-cloudformation"
    //   },
    //   "sources": ["https://github.com/microsoft/vscode-eslint"],
    //   "rationale": "uses vscode eslint, manually extracted/installed"
    // },
    "coc-efm-langserver-elsint_d": {
      "filetypes": ["javascript", "typescript"],
      "command": "$HOME/go/bin/efm-langserver",
      "args": [],
      //  "command": "nc",
      //  "args": ["localhost", "12345"],
      "rootPatterns": [".git/"],
      "trace.server": "verbose",
      "initializationOptions": {
        "documentFormatting": true,
        "documentRangeFormatting": true,
        "documentSymbol": true,
        "codeAction": true,
        "completion": true
      },
      "sources": [
        "go install github.com/mattn/efm-langserver@latest",
        "npm install -g eslint_d"
      ],
      "rationale": "efm-langserver:eslint_d.js for linting+formatting.",
      "alternatives": ["coc-eslint"]
    },
    //"coc-typescript-language-server": {
    //  "filetypes": ["typescript"],
    //  "command": "typescript-language-server",
    //  "args": ["--stdio"],
    //  "sources": ["npm install -g typescript-language-server"]
    //},
    //"coc-vtsls": {
    //  "filetypes": ["typescript"],
    //  "command": "vtsls",
    //  "args": ["--stdio"],
    //  "sources": ["npm install -g @vtsls/language-server"],
    //  "rationale": "LSP wrapper for typescript extension of vscode"
    //},
    "coc-efm-langserver-json-jsonc": {
      "filetypes": ["json", "jsonc"],
      "command": "$HOME/go/bin/efm-langserver",
      "args": [],
      //   "command": "nc",
      //   "args": ["localhost", "12345"],

      "rootPatterns": [".git/"],
      "trace.server": "verbose",
      "initializationOptions": {
        "documentFormatting": true,
        "documentRangeFormatting": true,
        "documentSymbol": true,
        "codeAction": true,
        "completion": true
      },
      "rationale": "efm-langserver:prettierd for formatting.",
      "sources": [
        "go install github.com/mattn/efm-langserver@latest",
        "npm install -g @fsouza/prettierd"
      ],
      "alternatives": ["coc-json"]
    },
    "pyright": {
      "command": "pyright-langserver",
      "filetypes": ["python"],
      "args": ["--stdio"],
      "settings": {
        "python": {
          "analysis": {
            "autoSearchPaths": true,
            "useLibraryCodeForTypes": true,
            "diagnosticMode": "workspace"
          }
        }
      },
      "sources": ["npm install -g pyright"],
      "rationale": "Static type checker for Python"
    }
  },
  "markdownlint.config": {
    "default": true,
    "line_length": false,
    "no-bare-urls": false,
    "fenced-code-language": false
  },
  "suggest.enablePreselect": false,
  "yaml.customTags": [
    "!Ref scalar",
    "!Sub scalar",
    "!GetAtt",
    "!Base64",
    "!FindInMap",
    "!GetAZs",
    "!ImportValue",
    "!Join",
    "!Select",
    "!Split",
    "!If",
    "!Equals",
    "!Equals mapping",
    "!Not",
    "!And",
    "!Or",
    "!Condition"
  ],
  "yaml.format.enable": true,
  "yaml.hover": true,
  "yaml.completion": true
}
