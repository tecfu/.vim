// For unknown reasons this file will always be noexpandtab in nvim
{
  "diagnostic.virtualTextCurrentLineOnly": false,
  "diagnostic.messageTarget": "echo",
  "diagnostic.virtualText": true,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.enable": true,
  "diagnostic.autoRefresh": true,
  "diagnostic.locationlistUpdate": true,
  "diagnostic.errorSign": "✖",
  "diagnostic.warningSign": "⚑",
  "diagnostic.infoSign": "⚑",
  "diagnostic.hintSign": "⚑",
  "languageserver": {
    "external-coc-terraform-ls": {
      "filetypes": ["terraform", "tf"],
      "command": "terraform-ls",
      "args": ["serve"],
      "initializationOptions": {},
      "settings": {},
      "sources": ["https://github.com/hashicorp/terraform-ls"]
    },
    "external-coc-vscode-json-language-server": {
      "filetypes": ["json", "jsonc"],
      "command": "vscode-json-language-server",
      "args": ["--stdio"],
      "settings": {
        "json": {
          "schemas": [],
          "format": {
            "enable": false
          },
          "validate": {
            "enable": true
          }
        }
      },
      "trace.server": "verbose",
      "initializationOptions": {
        "documentFormatting": false,
        "documentRangeFormatting": false
      },
      "sources": ["https://github.com/hrsh7th/vscode-langservers-extracted"],
      "rationale": "We use vscode-json-language-server for linting. We could use coc-json for both but wanted to get away from coc extensions."
    },
    "external-coc-efm-langserver-ts-js": {
      "filetypes": ["javascript", "typescript"],
      "command": "efm-langserver",
      "args": [],
      "rootPatterns": [".git/"],
      "trace.server": "verbose",
      "initializationOptions": {
        "documentFormatting": true,
        "documentRangeFormatting": true,
        "documentSymbol": true,
        "codeAction": true,
        "completion": true
      },
      "sources": [
        "https://github.com/mattn/efm-langserver",
        "https://github.com/mantoni/eslint_d.js"
      ],
      "rationale": "We use efm-langserver+eslint_d.js for linting+formatting. We could use coc-eslint for both but wanted to get away from coc extensions."
    },
    "external-coc-efm-langserver-json-jsonc": {
      "filetypes": ["json", "jsonc"],
      "command": "efm-langserver",
      "args": [],
      "rootPatterns": [".git/"],
      "trace.server": "verbose",
      "initializationOptions": {
        "documentFormatting": true,
        "documentRangeFormatting": true,
        "documentSymbol": true,
        "codeAction": true,
        "completion": true
      },
      "rationale": "We use efm-langserver+prettierd for formatting. We could use coc-json for both but wanted to get away from coc extensions.",
      "sources": [
        "https://github.com/mattn/efm-langserver",
        "https://github.com/fsouza/prettierd"
      ]
    }
    // "coc-efm-languageserver-debug": {
    //   "command": "nc",
    //   "args": ["localhost", "12345"],
    //   "filetypes": ["javascript", "typescript", "json", "jsonc"],
    //   "rootPatterns": [".git/"],
    //   "trace.server": "verbose",
    //   "initializationOptions": {
    //     "documentFormatting": true,
    //     "documentRangeFormatting": true,
    //     "documentSymbol": true,
    //     "codeAction": true,
    //     "completion": true
    //   }
    // }
  },
  "markdownlint.config": {
    "default": true,
    "line_length": false,
    "no-bare-urls": false,
    "fenced-code-language": false
  },
  "suggest.enablePreselect": false,
  "yaml.customTags": [
    "!Ref scalar",
    "!Sub scalar",
    "!GetAtt",
    "!Base64",
    "!FindInMap",
    "!GetAZs",
    "!ImportValue",
    "!Join",
    "!Select",
    "!Split",
    "!If",
    "!Equals",
    "!Equals mapping",
    "!Not",
    "!And",
    "!Or",
    "!Condition"
  ],
  "yaml.format.enable": true,
  "yaml.hover": true,
  "yaml.completion": true
}
